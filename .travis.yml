language: java
jdk:
  - openjdk17


# Travis CI를 어느 브랜치가 push 될 때 수행할 지 지정한다.
branches:
  only:
    - master

# Travis CI 서버의 Home
# gradle을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 다음 배포 때부터 다시 받지 않도록 설정한다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master branch에 push 되었을 대 수행하는 명령어
script: "./gradlew clean build"

before_deploy:  # CodeDeploysms jar 파일은 인식하지 못하므로 jar + 기타 설정 파일들을 모아 압축해야 한다.
  - zip -r spring-general *  # zip -r <압축파일명>.zip <압축하려는 폴더>
  - mkdir -p deploy  # mkdir -p 옵션은 안전하게 파일 경로를 생성해 준다
  - mv spring-general.zip deploy/spring-general.zip

deploy:      # S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언한다.
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY   # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY    # Travis repo settings에 설정된 값
    bucket: spring-general-build-bucket
    region: ap-northeast-2
    skip_cleanup: true
    acl: private    # zip 파일 접근을 private 으로
    local_dir: deploy   # before_deploy 에서 생성한 디렉토리. 해당 위치의 파일들만 S3로 전송한다.
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: spring-general-build-bucket
    key: spring-general.zip   # 빌드 파일을 압축해서 전달
    bundle_type: zip    # 압축 확장자
    application: spring-general   # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: spring-general-group  # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true



# CI 실행 완료 시 메일로 알림
notifications:
  email:
    recipients:
      - thisis.joos@gmail.com